call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'mileszs/ack.vim'
Plug 'kien/ctrlp.vim'
Plug 'sickill/vim-pasta'
Plug 'vim-syntastic/syntastic'
Plug 'pangloss/vim-javascript'
Plug 'Valloric/YouCompleteMe'
Plug 'altercation/vim-colors-solarized'
Plug 'chriskempson/base16-vim'
Plug 'leafgarland/typescript-vim'
Plug 'junegunn/rainbow_parentheses.vim'

call plug#end()

set nocompatible

" color
set t_Co=256
set background=dark
" colorscheme distinguished
"
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif

colorscheme base16-materia

set ruler
syntax on

filetype plugin indent on

set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set foldmethod=indent
set autoindent
set smartindent

" needed for fish shell to run some plugins
set shell=/bin/sh

" search
set hlsearch
set incsearch
set ignorecase
set smartcase

" space clears search highlight
:noremap <silent> <Space> :silent noh<Bar>echo<CR>

set backspace=indent,eol,start

" swp files
set backupdir=~/tmp
set directory=~/tmp

" status line
set laststatus=2 
set statusline=[POS=%04l,%04v]\ [LEN=%L]%=%F%m%r%h%w\ \ 

set wildmenu
set wildmode=longest,list

set wildignore+=tmp/*,public/javascripts/release/**,public/javascripts/vendor/**,test/fixtures/public/**,node_modules/**,public/instrumented-js/**,vendor/**

" linting
autocmd FileType javascript let b:syntastic_checkers = findfile('.eslintrc.js', '.;') != '' ? ['eslint'] : ['standard']

" use ag for ack.vim
let g:ackprg = 'ag --nogroup --nocolor --column'

let mapleader = ","

" ctrl-p
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_map = '<C-T>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:crlp_max_height = 10
let g:crlp_max_files = 20000
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|resources/public/js/compiled\|www'

" ignore whitespace in diff mode 
set diffopt+=iwhite
set diffexpr=DiffW()
function DiffW()
let opt = ""
 if &diffopt =~ "icase"
   let opt = opt . "-i "
 endif
 if &diffopt =~ "iwhite"
   let opt = opt . "-w " " vim uses -b by default
 endif
 silent execute "!diff -a --binary " . opt .
   \ v:fname_in . " " . v:fname_new .  " > " . v:fname_out
endfunction

" tab behavior: indent if at start of line, otherwise do completion
function! InsertTabWrapper()
  let col = col('.') -1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>

" faster scrolling
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

nnoremap <C-D> :qa<CR>

" pane navigation
nnoremap <C-K> <C-W>k
nnoremap <C-J> <C-W>j
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l

" faster pane resizing
nnoremap <C-W>, 10<C-W><
nnoremap <C-W>. 10<C-W>>
nnoremap <C-W>- 10<C-W>-
nnoremap <C-W>+ 10<C-W>+

" search for function name
nnoremap <C-u> /function *&* *\zs

" change working directory to that of current file.
cmap cd. lcd %:p:h

" Faster 'next search repeat command' {{{3
nnoremap Q :normal n.<CR>

noremap <Leader>n :setlocal number!<CR>
noremap <Leader>nr :setlocal relativenumber!<CR>
